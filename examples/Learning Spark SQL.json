{"paragraphs":[{"text":"%md\n\n## Exploring Spark SQL Module\n### with an Airline Dataset\n","user":"anonymous","dateUpdated":"2019-07-22T19:53:32+0000","config":{"tableHide":false,"editorSetting":{"editOnDblClick":true,"language":"markdown"},"editorMode":"ace/mode/markdown","colWidth":12,"editorHide":true,"fontSize":9,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1563798502908_1985933986","id":"20160410-003138_1880368561","dateCreated":"2019-07-22T12:28:22+0000","dateStarted":"2019-07-22T19:53:32+0000","dateFinished":"2019-07-22T19:53:32+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:42384","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>Exploring Spark SQL Module</h2>\n<h3>with an Airline Dataset</h3>\n</div>"}]}},{"title":"Introduction","text":"%md\n\nIn this lab you will use Spark SQL via DataFrames API in Part 1 of the lab and SQL API in Part 2 of the lab to explore an Airline Dataset. This is a very interesting dataset that is further explored in other demo notebooks.","user":"anonymous","dateUpdated":"2019-07-22T19:53:32+0000","config":{"editorSetting":{},"editorMode":"ace/mode/markdown","colWidth":12,"editorHide":true,"fontSize":9,"title":true,"results":[{"graph":{"mode":"table","height":217,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1563798502915_-42625919","id":"20160410-003138_985055475","dateCreated":"2019-07-22T12:28:22+0000","dateStarted":"2019-07-22T19:53:32+0000","dateFinished":"2019-07-22T19:53:32+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:42385","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>In this lab you will use Spark SQL via DataFrames API in Part 1 of the lab and SQL API in Part 2 of the lab to explore an Airline Dataset. This is a very interesting dataset that is further explored in other demo notebooks.</p>\n</div>"}]}},{"text":"%md\n### Datasets and DataFrames\n\nThis tutorial relies on your understanding of Datasets and DataFrames, for a breif explanation on what they are navigate to the accompanying [**Hortonworks Tutorial**](https://hortonworks.com/tutorial/learning-spark-sql-with-zeppelin/#datasets-and-dataframes)","user":"anonymous","dateUpdated":"2019-07-22T19:53:32+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":12,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1563798502915_-1239788567","id":"20180806-222529_1721680673","dateCreated":"2019-07-22T12:28:22+0000","dateStarted":"2019-07-22T19:53:32+0000","dateFinished":"2019-07-22T19:53:32+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:42386","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Datasets and DataFrames</h3>\n<p>This tutorial relies on your understanding of Datasets and DataFrames, for a breif explanation on what they are navigate to the accompanying <a href=\"https://hortonworks.com/tutorial/learning-spark-sql-with-zeppelin/#datasets-and-dataframes\"><strong>Hortonworks Tutorial</strong></a></p>\n</div>"}]}},{"title":"Verify Spark Version (should be 2.x)","text":"%spark\n\nspark.version","user":"anonymous","dateUpdated":"2019-07-22T19:53:32+0000","config":{"editorSetting":{"editOnDblClick":false,"language":"scala","completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala","colWidth":12,"editorHide":false,"fontSize":9,"title":true,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1563798502916_-2101874045","id":"20160410-003138_631425785","dateCreated":"2019-07-22T12:28:22+0000","dateStarted":"2019-07-22T19:53:32+0000","dateFinished":"2019-07-22T19:53:32+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:42387","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res141: String = 2.3.1\n"}]}},{"title":"Download CSV flight data file ","text":"%sh\n\n# You will now download a subset of 2008 flights (only 100k lines)\n# The full dataset may be found here: http://stat-computing.org/dataexpo/2009/the-data.html\n\nwget https://raw.githubusercontent.com/hortonworks/data-tutorials/master/tutorials/hdp/learning-spark-sql-with-zeppelin/assets/flights.csv -O /tmp/flights.csv && echo \"Downloaded!\"","user":"anonymous","dateUpdated":"2019-07-22T19:53:32+0000","config":{"tableHide":false,"editorSetting":{"editOnDblClick":false,"language":"sh","completionSupport":false},"editorMode":"ace/mode/sh","colWidth":12,"editorHide":false,"fontSize":9,"title":true,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1563798502916_389083768","id":"20160410-003138_1540125404","dateCreated":"2019-07-22T12:28:22+0000","dateStarted":"2019-07-22T19:53:33+0000","dateFinished":"2019-07-22T19:53:35+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:42388","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"--2019-07-22 19:53:33--  https://raw.githubusercontent.com/hortonworks/data-tutorials/master/tutorials/hdp/learning-spark-sql-with-zeppelin/assets/flights.csv\nResolving raw.githubusercontent.com (raw.githubusercontent.com)... 151.101.208.133\nConnecting to raw.githubusercontent.com (raw.githubusercontent.com)|151.101.208.133|:443... connected.\nHTTP request sent, awaiting response... 200 OK\nLength: 9719582 (9.3M) [text/plain]\nSaving to: ‘/tmp/flights.csv’\n\n     0K .......... .......... .......... .......... ..........  0% 1.36M 7s\n    50K .......... .......... .......... .......... ..........  1% 21.5M 4s\n   100K .......... .......... .......... .......... ..........  1% 5.57M 3s\n   150K .......... .......... .......... .......... ..........  2% 6.14M 3s\n   200K .......... .......... .......... .......... ..........  2% 4.62M 2s\n   250K .......... .......... .......... .......... ..........  3% 5.76M 2s\n   300K .......... .......... .......... .......... ..........  3% 4.25M 2s\n   350K .......... .......... .......... .......... ..........  4% 6.52M 2s\n   400K .......... .......... .......... .......... ..........  4% 5.40M 2s\n   450K .......... .......... .......... .......... ..........  5% 5.51M 2s\n   500K .......... .......... .......... .......... ..........  5% 3.03M 2s\n   550K .......... .......... .......... .......... ..........  6% 15.4M 2s\n   600K .......... .......... .......... .......... ..........  6% 6.99M 2s\n   650K .......... .......... .......... .......... ..........  7% 5.63M 2s\n   700K .......... .......... .......... .......... ..........  7% 3.56M 2s\n   750K .......... .......... .......... .......... ..........  8% 1.56M 2s\n   800K .......... .......... .......... .......... ..........  8%  224K 4s\n   850K .......... .......... .......... .......... ..........  9% 2.75M 4s\n   900K .......... .......... .......... .......... .......... 10%  460K 5s\n   950K .......... .......... .......... .......... .......... 10% 4.61M 5s\n  1000K .......... .......... .......... .......... .......... 11% 4.98M 5s\n  1050K .......... .......... .......... .......... .......... 11% 5.10M 4s\n  1100K .......... .......... .......... .......... .......... 12% 5.09M 4s\n  1150K .......... .......... .......... .......... .......... 12% 4.27M 4s\n  1200K .......... .......... .......... .......... .......... 13% 5.48M 4s\n  1250K .......... .......... .......... .......... .......... 13% 5.74M 4s\n  1300K .......... .......... .......... .......... .......... 14% 6.71M 4s\n  1350K .......... .......... .......... .......... .......... 14% 7.04M 4s\n  1400K .......... .......... .......... .......... .......... 15% 8.05M 3s\n  1450K .......... .......... .......... .......... .......... 15% 3.94M 3s\n  1500K .......... .......... .......... .......... .......... 16% 10.2M 3s\n  1550K .......... .......... .......... .......... .......... 16% 9.01M 3s\n  1600K .......... .......... .......... .......... .......... 17% 9.95M 3s\n  1650K .......... .......... .......... .......... .......... 17% 10.0M 3s\n  1700K .......... .......... .......... .......... .......... 18% 11.2M 3s\n  1750K .......... .......... .......... .......... .......... 18% 4.85M 3s\n  1800K .......... .......... .......... .......... .......... 19% 4.82M 3s\n  1850K .......... .......... .......... .......... .......... 20% 17.7M 3s\n  1900K .......... .......... .......... .......... .......... 20% 5.50M 3s\n  1950K .......... .......... .......... .......... .......... 21% 6.97M 3s\n  2000K .......... .......... .......... .......... .......... 21% 23.7M 3s\n  2050K .......... .......... .......... .......... .......... 22% 10.6M 3s\n  2100K .......... .......... .......... .......... .......... 22% 14.7M 2s\n  2150K .......... .......... .......... .......... .......... 23% 13.9M 2s\n  2200K .......... .......... .......... .......... .......... 23% 19.6M 2s\n  2250K .......... .......... .......... .......... .......... 24% 9.28M 2s\n  2300K .......... .......... .......... .......... .......... 24% 13.7M 2s\n  2350K .......... .......... .......... .......... .......... 25% 10.0M 2s\n  2400K .......... .......... .......... .......... .......... 25% 3.15M 2s\n  2450K .......... .......... .......... .......... .......... 26% 48.0M 2s\n  2500K .......... .......... .......... .......... .......... 26% 14.4M 2s\n  2550K .......... .......... .......... .......... .......... 27% 20.0M 2s\n  2600K .......... .......... .......... .......... .......... 27% 14.3M 2s\n  2650K .......... .......... .......... .......... .......... 28% 10.9M 2s\n  2700K .......... .......... .......... .......... .......... 28% 9.17M 2s\n  2750K .......... .......... .......... .......... .......... 29% 13.1M 2s\n  2800K .......... .......... .......... .......... .......... 30% 23.1M 2s\n  2850K .......... .......... .......... .......... .......... 30% 3.24M 2s\n  2900K .......... .......... .......... .......... .......... 31% 22.3M 2s\n  2950K .......... .......... .......... .......... .......... 31% 28.7M 2s\n  3000K .......... .......... .......... .......... .......... 32% 7.94M 2s\n  3050K .......... .......... .......... .......... .......... 32% 9.08M 2s\n  3100K .......... .......... .......... .......... .......... 33% 1.59M 2s\n  3150K .......... .......... .......... .......... .......... 33% 60.7M 2s\n  3200K .......... .......... .......... .......... .......... 34% 2.85M 2s\n  3250K .......... .......... .......... .......... .......... 34% 9.69M 2s\n  3300K .......... .......... .......... .......... .......... 35% 4.51M 2s\n  3350K .......... .......... .......... .......... .......... 35% 2.78M 2s\n  3400K .......... .......... .......... .......... .......... 36% 8.50M 2s\n  3450K .......... .......... .......... .......... .......... 36% 4.65M 2s\n  3500K .......... .......... .......... .......... .......... 37% 6.11M 2s\n  3550K .......... .......... .......... .......... .......... 37% 5.03M 2s\n  3600K .......... .......... .......... .......... .......... 38% 5.22M 1s\n  3650K .......... .......... .......... .......... .......... 38% 3.48M 1s\n  3700K .......... .......... .......... .......... .......... 39% 14.1M 1s\n  3750K .......... .......... .......... .......... .......... 40% 6.16M 1s\n  3800K .......... .......... .......... .......... .......... 40% 11.1M 1s\n  3850K .......... .......... .......... .......... .......... 41% 5.87M 1s\n  3900K .......... .......... .......... .......... .......... 41% 8.99M 1s\n  3950K .......... .......... .......... .......... .......... 42% 5.03M 1s\n  4000K .......... .......... .......... .......... .......... 42% 7.12M 1s\n  4050K .......... .......... .......... .......... .......... 43% 5.78M 1s\n  4100K .......... .......... .......... .......... .......... 43% 11.0M 1s\n  4150K .......... .......... .......... .......... .......... 44% 10.6M 1s\n  4200K .......... .......... .......... .......... .......... 44% 8.30M 1s\n  4250K .......... .......... .......... .......... .......... 45% 11.5M 1s\n  4300K .......... .......... .......... .......... .......... 45% 10.2M 1s\n  4350K .......... .......... .......... .......... .......... 46% 1.95M 1s\n  4400K .......... .......... .......... .......... .......... 46% 20.2M 1s\n  4450K .......... .......... .......... .......... .......... 47% 11.6M 1s\n  4500K .......... .......... .......... .......... .......... 47% 2.98M 1s\n  4550K .......... .......... .......... .......... .......... 48% 13.3M 1s\n  4600K .......... .......... .......... .......... .......... 48% 3.49M 1s\n  4650K .......... .......... .......... .......... .......... 49% 4.87M 1s\n  4700K .......... .......... .......... .......... .......... 50% 4.07M 1s\n  4750K .......... .......... .......... .......... .......... 50% 2.84M 1s\n  4800K .......... .......... .......... .......... .......... 51% 2.01M 1s\n  4850K .......... .......... .......... .......... .......... 51% 6.22M 1s\n  4900K .......... .......... .......... .......... .......... 52% 4.18M 1s\n  4950K .......... .......... .......... .......... .......... 52% 5.04M 1s\n  5000K .......... .......... .......... .......... .......... 53% 4.12M 1s\n  5050K .......... .......... .......... .......... .......... 53% 5.47M 1s\n  5100K .......... .......... .......... .......... .......... 54% 4.92M 1s\n  5150K .......... .......... .......... .......... .......... 54% 4.24M 1s\n  5200K .......... .......... .......... .......... .......... 55% 6.06M 1s\n  5250K .......... .......... .......... .......... .......... 55% 3.95M 1s\n  5300K .......... .......... .......... .......... .......... 56% 3.81M 1s\n  5350K .......... .......... .......... .......... .......... 56% 5.60M 1s\n  5400K .......... .......... .......... .......... .......... 57% 7.14M 1s\n  5450K .......... .......... .......... .......... .......... 57% 7.73M 1s\n  5500K .......... .......... .......... .......... .......... 58% 4.65M 1s\n  5550K .......... .......... .......... .......... .......... 58% 3.13M 1s\n  5600K .......... .......... .......... .......... .......... 59% 13.5M 1s\n  5650K .......... .......... .......... .......... .......... 60% 7.30M 1s\n  5700K .......... .......... .......... .......... .......... 60% 10.5M 1s\n  5750K .......... .......... .......... .......... .......... 61% 6.16M 1s\n  5800K .......... .......... .......... .......... .......... 61% 9.57M 1s\n  5850K .......... .......... .......... .......... .......... 62% 4.41M 1s\n  5900K .......... .......... .......... .......... .......... 62% 3.99M 1s\n  5950K .......... .......... .......... .......... .......... 63% 5.96M 1s\n  6000K .......... .......... .......... .......... .......... 63% 7.76M 1s\n  6050K .......... .......... .......... .......... .......... 64% 11.3M 1s\n  6100K .......... .......... .......... .......... .......... 64% 8.54M 1s\n  6150K .......... .......... .......... .......... .......... 65% 8.51M 1s\n  6200K .......... .......... .......... .......... .......... 65% 7.68M 1s\n  6250K .......... .......... .......... .......... .......... 66% 3.99M 1s\n  6300K .......... .......... .......... .......... .......... 66% 10.3M 1s\n  6350K .......... .......... .......... .......... .......... 67% 8.09M 1s\n  6400K .......... .......... .......... .......... .......... 67% 12.5M 1s\n  6450K .......... .......... .......... .......... .......... 68% 15.5M 1s\n  6500K .......... .......... .......... .......... .......... 69% 11.5M 1s\n  6550K .......... .......... .......... .......... .......... 69% 13.1M 1s\n  6600K .......... .......... .......... .......... .......... 70% 13.0M 1s\n  6650K .......... .......... .......... .......... .......... 70% 11.0M 1s\n  6700K .......... .......... .......... .......... .......... 71% 5.13M 1s\n  6750K .......... .......... .......... .......... .......... 71% 5.11M 1s\n  6800K .......... .......... .......... .......... .......... 72% 13.2M 1s\n  6850K .......... .......... .......... .......... .......... 72% 6.44M 1s\n  6900K .......... .......... .......... .......... .......... 73% 12.9M 1s\n  6950K .......... .......... .......... .......... .......... 73% 17.6M 1s\n  7000K .......... .......... .......... .......... .......... 74% 13.0M 1s\n  7050K .......... .......... .......... .......... .......... 74% 11.9M 1s\n  7100K .......... .......... .......... .......... .......... 75% 11.7M 0s\n  7150K .......... .......... .......... .......... .......... 75% 4.26M 0s\n  7200K .......... .......... .......... .......... .......... 76% 14.8M 0s\n  7250K .......... .......... .......... .......... .......... 76% 2.35M 0s\n  7300K .......... .......... .......... .......... .......... 77% 2.04M 0s\n  7350K .......... .......... .......... .......... .......... 77% 2.84M 0s\n  7400K .......... .......... .......... .......... .......... 78% 5.09M 0s\n  7450K .......... .......... .......... .......... .......... 79% 4.34M 0s\n  7500K .......... .......... .......... .......... .......... 79% 4.00M 0s\n  7550K .......... .......... .......... .......... .......... 80% 4.26M 0s\n  7600K .......... .......... .......... .......... .......... 80% 4.88M 0s\n  7650K .......... .......... .......... .......... .......... 81% 3.60M 0s\n  7700K .......... .......... .......... .......... .......... 81% 4.07M 0s\n  7750K .......... .......... .......... .......... .......... 82% 2.24M 0s\n  7800K .......... .......... .......... .......... .......... 82% 13.6M 0s\n  7850K .......... .......... .......... .......... .......... 83% 6.65M 0s\n  7900K .......... .......... .......... .......... .......... 83% 7.22M 0s\n  7950K .......... .......... .......... .......... .......... 84% 4.70M 0s\n  8000K .......... .......... .......... .......... .......... 84% 6.23M 0s\n  8050K .......... .......... .......... .......... .......... 85% 5.62M 0s\n  8100K .......... .......... .......... .......... .......... 85% 9.56M 0s\n  8150K .......... .......... .......... .......... .......... 86% 7.11M 0s\n  8200K .......... .......... .......... .......... .......... 86% 11.6M 0s\n  8250K .......... .......... .......... .......... .......... 87% 7.84M 0s\n  8300K .......... .......... .......... .......... .......... 87% 8.51M 0s\n  8350K .......... .......... .......... .......... .......... 88% 3.25M 0s\n  8400K .......... .......... .......... .......... .......... 89% 3.23M 0s\n  8450K .......... .......... .......... .......... .......... 89% 17.7M 0s\n  8500K .......... .......... .......... .......... .......... 90% 5.09M 0s\n  8550K .......... .......... .......... .......... .......... 90% 10.4M 0s\n  8600K .......... .......... .......... .......... .......... 91% 10.1M 0s\n  8650K .......... .......... .......... .......... .......... 91% 9.49M 0s\n  8700K .......... .......... .......... .......... .......... 92% 7.89M 0s\n  8750K .......... .......... .......... .......... .......... 92% 6.73M 0s\n  8800K .......... .......... .......... .......... .......... 93% 8.58M 0s\n  8850K .......... .......... .......... .......... .......... 93% 18.4M 0s\n  8900K .......... .......... .......... .......... .......... 94% 8.28M 0s\n  8950K .......... .......... .......... .......... .......... 94% 10.1M 0s\n  9000K .......... .......... .......... .......... .......... 95% 11.2M 0s\n  9050K .......... .......... .......... .......... .......... 95% 8.77M 0s\n  9100K .......... .......... .......... .......... .......... 96% 10.2M 0s\n  9150K .......... .......... .......... .......... .......... 96% 7.14M 0s\n  9200K .......... .......... .......... .......... .......... 97% 10.7M 0s\n  9250K .......... .......... .......... .......... .......... 97% 9.56M 0s\n  9300K .......... .......... .......... .......... .......... 98% 6.39M 0s\n  9350K .......... .......... .......... .......... .......... 99% 7.03M 0s\n  9400K .......... .......... .......... .......... .......... 99% 15.1M 0s\n  9450K .......... .......... .......... .......... .         100% 16.1M=1.9s\n\n2019-07-22 19:53:35 (4.93 MB/s) - ‘/tmp/flights.csv’ saved [9719582/9719582]\n\nDownloaded!\n"}]}},{"title":"Preview Downloaded File","text":"%sh\n\ncat /tmp/flights.csv | head","user":"anonymous","dateUpdated":"2019-07-22T19:53:35+0000","config":{"tableHide":false,"editorSetting":{"editOnDblClick":false,"language":"sh","completionSupport":false},"editorMode":"ace/mode/sh","colWidth":12,"editorHide":false,"fontSize":9,"title":true,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1563798502916_-579909152","id":"20160410-003138_226044813","dateCreated":"2019-07-22T12:28:22+0000","dateStarted":"2019-07-22T19:53:35+0000","dateFinished":"2019-07-22T19:53:35+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:42389","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Year,Month,DayofMonth,DayOfWeek,DepTime,CRSDepTime,ArrTime,CRSArrTime,UniqueCarrier,FlightNum,TailNum,ActualElapsedTime,CRSElapsedTime,AirTime,ArrDelay,DepDelay,Origin,Dest,Distance,TaxiIn,TaxiOut,Cancelled,CancellationCode,Diverted,CarrierDelay,WeatherDelay,NASDelay,SecurityDelay,LateAircraftDelay\n2008,1,3,4,2003,1955,2211,2225,WN,335,N712SW,128,150,116,-14,8,IAD,TPA,810,4,8,0,,0,NA,NA,NA,NA,NA\n2008,1,3,4,754,735,1002,1000,WN,3231,N772SW,128,145,113,2,19,IAD,TPA,810,5,10,0,,0,NA,NA,NA,NA,NA\n2008,1,3,4,628,620,804,750,WN,448,N428WN,96,90,76,14,8,IND,BWI,515,3,17,0,,0,NA,NA,NA,NA,NA\n2008,1,3,4,926,930,1054,1100,WN,1746,N612SW,88,90,78,-6,-4,IND,BWI,515,3,7,0,,0,NA,NA,NA,NA,NA\n2008,1,3,4,1829,1755,1959,1925,WN,3920,N464WN,90,90,77,34,34,IND,BWI,515,3,10,0,,0,2,0,0,0,32\n2008,1,3,4,1940,1915,2121,2110,WN,378,N726SW,101,115,87,11,25,IND,JAX,688,4,10,0,,0,NA,NA,NA,NA,NA\n2008,1,3,4,1937,1830,2037,1940,WN,509,N763SW,240,250,230,57,67,IND,LAS,1591,3,7,0,,0,10,0,0,0,47\n2008,1,3,4,1039,1040,1132,1150,WN,535,N428WN,233,250,219,-18,-1,IND,LAS,1591,7,7,0,,0,NA,NA,NA,NA,NA\n2008,1,3,4,617,615,652,650,WN,11,N689SW,95,95,70,2,2,IND,MCI,451,6,19,0,,0,NA,NA,NA,NA,NA\n"}]}},{"title":"Move dataset to HDFS (if supported/available)","text":"%sh\n\n# remove existing copies of dataset from HDFS\nhdfs dfs -rm -r -f /tmp/data/flights.csv\n\n# put data into HDFS\nhdfs dfs -put /tmp/flights.csv /tmp/data","user":"anonymous","dateUpdated":"2019-07-22T19:53:35+0000","config":{"editorSetting":{"editOnDblClick":false,"language":"sh","completionSupport":false},"editorMode":"ace/mode/sh","colWidth":12,"editorHide":false,"fontSize":9,"title":true,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1563798502916_974053520","id":"20160410-003138_1267267737","dateCreated":"2019-07-22T12:28:22+0000","dateStarted":"2019-07-22T19:53:35+0000","dateFinished":"2019-07-22T19:53:40+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:42390","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"2019-07-22 19:53:37,468 INFO Configuration.deprecation: io.bytes.per.checksum is deprecated. Instead, use dfs.bytes-per-checksum\nDeleted /tmp/data/flights.csv\n"}]}},{"title":"Create a DataFrame from CSV file","text":"%spark\n\n// Create a flights DataFrame from CSV file\nval flights = (spark.read\n              .option(\"header\", \"true\")                              // Use first line as header\n              .option(\"inferSchema\", \"true\")                         // Infer schema\n              .csv(\"/tmp/data/flights.csv\"))                               // Read data","user":"anonymous","dateUpdated":"2019-07-22T19:53:40+0000","config":{"editorSetting":{"editOnDblClick":false,"language":"scala","completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala","colWidth":12,"editorHide":false,"fontSize":9,"title":true,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"enabled":true},"settings":{"params":{},"forms":{}},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://zeppelin:4040/jobs/job?id=77","http://zeppelin:4040/jobs/job?id=78"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1563798502917_-1499413577","id":"20160410-003138_236600548","dateCreated":"2019-07-22T12:28:22+0000","dateStarted":"2019-07-22T19:53:40+0000","dateFinished":"2019-07-22T19:53:40+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:42391","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"flights: org.apache.spark.sql.DataFrame = [Year: int, Month: int ... 27 more fields]\n"}]}},{"title":"Print Schema","text":"%spark\n\n// Print the schema in a tree format\nflights.printSchema()","user":"anonymous","dateUpdated":"2019-07-22T19:53:40+0000","config":{"editorSetting":{"editOnDblClick":false,"language":"scala","completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala","colWidth":12,"editorHide":false,"fontSize":9,"title":true,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1563798502917_231878626","id":"20160410-003138_1553179639","dateCreated":"2019-07-22T12:28:22+0000","dateStarted":"2019-07-22T19:53:40+0000","dateFinished":"2019-07-22T19:53:41+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:42392","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"root\n |-- Year: integer (nullable = true)\n |-- Month: integer (nullable = true)\n |-- DayofMonth: integer (nullable = true)\n |-- DayOfWeek: integer (nullable = true)\n |-- DepTime: string (nullable = true)\n |-- CRSDepTime: integer (nullable = true)\n |-- ArrTime: string (nullable = true)\n |-- CRSArrTime: integer (nullable = true)\n |-- UniqueCarrier: string (nullable = true)\n |-- FlightNum: integer (nullable = true)\n |-- TailNum: string (nullable = true)\n |-- ActualElapsedTime: string (nullable = true)\n |-- CRSElapsedTime: integer (nullable = true)\n |-- AirTime: string (nullable = true)\n |-- ArrDelay: string (nullable = true)\n |-- DepDelay: string (nullable = true)\n |-- Origin: string (nullable = true)\n |-- Dest: string (nullable = true)\n |-- Distance: integer (nullable = true)\n |-- TaxiIn: string (nullable = true)\n |-- TaxiOut: string (nullable = true)\n |-- Cancelled: integer (nullable = true)\n |-- CancellationCode: string (nullable = true)\n |-- Diverted: integer (nullable = true)\n |-- CarrierDelay: string (nullable = true)\n |-- WeatherDelay: string (nullable = true)\n |-- NASDelay: string (nullable = true)\n |-- SecurityDelay: string (nullable = true)\n |-- LateAircraftDelay: string (nullable = true)\n\n"}]}},{"text":"%md\n\n## Part 1: Using DataFrame/Dataset API to Analyze the Airline Data\n\nNote: in this lab DataFrame and Dataset API calls will be indistinguishable. Internally, however, flights are represented as DataFrames and delayedFlights as Datasets in the examples below. Follow along on the [Hortonworks Tutorial](https://hortonworks.com/tutorial/learning-spark-sql-with-zeppelin/#using-dataframe-and-dataset-api-to-analyze-airline-data) for the full story.","user":"anonymous","dateUpdated":"2019-07-22T19:53:41+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1563798502917_974014553","id":"20180807-192327_1873511480","dateCreated":"2019-07-22T12:28:22+0000","dateStarted":"2019-07-22T19:53:41+0000","dateFinished":"2019-07-22T19:53:41+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:42393","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>Part 1: Using DataFrame/Dataset API to Analyze the Airline Data</h2>\n<p>Note: in this lab DataFrame and Dataset API calls will be indistinguishable. Internally, however, flights are represented as DataFrames and delayedFlights as Datasets in the examples below. Follow along on the <a href=\"https://hortonworks.com/tutorial/learning-spark-sql-with-zeppelin/#using-dataframe-and-dataset-api-to-analyze-airline-data\">Hortonworks Tutorial</a> for the full story.</p>\n</div>"}]}},{"title":"Show a subset of columns","text":"%spark\n\n// Show a subset of columns with \"select\"\nflights.select(\"UniqueCarrier\", \"FlightNum\", \"DepDelay\", \"ArrDelay\", \"Distance\").show()","user":"anonymous","dateUpdated":"2019-07-22T19:53:41+0000","config":{"editorSetting":{"editOnDblClick":false,"language":"scala","completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala","colWidth":12,"editorHide":false,"fontSize":9,"title":true,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"enabled":true},"settings":{"params":{},"forms":{}},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://zeppelin:4040/jobs/job?id=79"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1563798502918_939531306","id":"20160410-003138_1188332400","dateCreated":"2019-07-22T12:28:22+0000","dateStarted":"2019-07-22T19:53:41+0000","dateFinished":"2019-07-22T19:53:41+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:42394","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-------------+---------+--------+--------+--------+\n|UniqueCarrier|FlightNum|DepDelay|ArrDelay|Distance|\n+-------------+---------+--------+--------+--------+\n|           WN|      335|       8|     -14|     810|\n|           WN|     3231|      19|       2|     810|\n|           WN|      448|       8|      14|     515|\n|           WN|     1746|      -4|      -6|     515|\n|           WN|     3920|      34|      34|     515|\n|           WN|      378|      25|      11|     688|\n|           WN|      509|      67|      57|    1591|\n|           WN|      535|      -1|     -18|    1591|\n|           WN|       11|       2|       2|     451|\n|           WN|      810|       0|     -16|     451|\n|           WN|      100|       6|       1|     828|\n|           WN|     1333|      94|      80|     828|\n|           WN|      829|      -4|       1|     162|\n|           WN|     1016|       0|      10|     162|\n|           WN|     1827|       2|      -4|     162|\n|           WN|     2272|       9|      11|     162|\n|           WN|      675|      27|      15|    1489|\n|           WN|     1144|       9|     -15|    1489|\n|           WN|        4|      28|      16|     838|\n|           WN|       54|      51|      37|     220|\n+-------------+---------+--------+--------+--------+\nonly showing top 20 rows\n\n"}]}},{"title":"Apply a filter to find flights delayed more than 15 min","text":"%spark\n\n// Create a Dataset containing flights with delayed departure by more than 15 min using \"filter\"\nval delayedFlights = (flights\n                        .select(\"UniqueCarrier\", \"DepDelay\")\n                        .filter($\"DepDelay\" > 15))\n                        \ndelayedFlights.show()","user":"anonymous","dateUpdated":"2019-07-22T19:53:42+0000","config":{"editorSetting":{"editOnDblClick":false,"language":"scala","completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala","colWidth":12,"editorHide":false,"fontSize":9,"title":true,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"enabled":true},"settings":{"params":{},"forms":{}},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://zeppelin:4040/jobs/job?id=80"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1563798502918_-686991030","id":"20160410-003138_704729700","dateCreated":"2019-07-22T12:28:22+0000","dateStarted":"2019-07-22T19:53:42+0000","dateFinished":"2019-07-22T19:53:42+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:42395","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"delayedFlights: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [UniqueCarrier: string, DepDelay: string]\n+-------------+--------+\n|UniqueCarrier|DepDelay|\n+-------------+--------+\n|           WN|      19|\n|           WN|      34|\n|           WN|      25|\n|           WN|      67|\n|           WN|      94|\n|           WN|      27|\n|           WN|      28|\n|           WN|      51|\n|           WN|      32|\n|           WN|      20|\n|           WN|      25|\n|           WN|      87|\n|           WN|      29|\n|           WN|      82|\n|           WN|      19|\n|           WN|      39|\n|           WN|      82|\n|           WN|      22|\n|           WN|      29|\n|           WN|      56|\n+-------------+--------+\nonly showing top 20 rows\n\n"}]}},{"title":"Display percentage of delayed flights","text":"%spark\n\nval numTotalFlights = flights.count()\nval numDelayedFlights = delayedFlights.count()\n\n// Print total number of delayed flights\nprintln(\"Percentage of Delayed Flights: \" + (numDelayedFlights.toFloat/numTotalFlights*100) + \"%\")","user":"anonymous","dateUpdated":"2019-07-22T19:53:42+0000","config":{"editorSetting":{"editOnDblClick":false,"language":"scala","completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala","colWidth":12,"editorHide":false,"fontSize":9,"title":true,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"enabled":true},"settings":{"params":{},"forms":{}},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://zeppelin:4040/jobs/job?id=81","http://zeppelin:4040/jobs/job?id=82"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1563798502918_263089194","id":"20160410-003138_1019754695","dateCreated":"2019-07-22T12:28:22+0000","dateStarted":"2019-07-22T19:53:42+0000","dateFinished":"2019-07-22T19:53:43+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:42396","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"numTotalFlights: Long = 100000\nnumDelayedFlights: Long = 19587\nPercentage of Delayed Flights: 19.587%\n"}]}},{"text":"%md\n\nWe can also create a user defined function (UDF) to determine delays.","user":"anonymous","dateUpdated":"2019-07-22T19:53:43+0000","config":{"editorSetting":{},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"fontSize":9,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1563798502918_1471580835","id":"20161017-203635_1855560775","dateCreated":"2019-07-22T12:28:22+0000","dateStarted":"2019-07-22T19:53:43+0000","dateFinished":"2019-07-22T19:53:43+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:42397","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>We can also create a user defined function (UDF) to determine delays.</p>\n</div>"}]}},{"title":" Create a UDF to determine delays","text":"%spark\n\nimport org.apache.spark.sql.functions.udf\n\n// Define a UDF to find delayed flights\n\n// Assume:\n//  if ArrDelay is not available then Delayed = False\n//  if ArrDelay > 15 min then Delayed = True else False\n\nval isDelayedUDF = udf((time: String) => if (time == \"NA\") 0 else if (time.toInt > 15) 1 else 0)","user":"anonymous","dateUpdated":"2019-07-22T19:53:43+0000","config":{"editorSetting":{"editOnDblClick":false,"language":"scala","completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1563798502919_-916100813","id":"20161017-203017_1781904338","dateCreated":"2019-07-22T12:28:22+0000","dateStarted":"2019-07-22T19:53:43+0000","dateFinished":"2019-07-22T19:53:44+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:42398","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import org.apache.spark.sql.functions.udf\nisDelayedUDF: org.apache.spark.sql.expressions.UserDefinedFunction = UserDefinedFunction(<function1>,IntegerType,Some(List(StringType)))\n"}]}},{"title":"Create a new DataFrame with IsDelayed column","text":"%spark\n\nval flightsWithDelays = flights.select($\"Year\", $\"Month\", $\"DayofMonth\", $\"UniqueCarrier\", $\"FlightNum\", $\"DepDelay\", \n                    isDelayedUDF($\"DepDelay\").alias(\"IsDelayed\"))\n                    \nflightsWithDelays.show(5)","user":"anonymous","dateUpdated":"2019-07-22T19:53:44+0000","config":{"editorSetting":{"editOnDblClick":false,"language":"scala","completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"enabled":true},"settings":{"params":{},"forms":{}},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://zeppelin:4040/jobs/job?id=83"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1563798502919_-865938929","id":"20161017-203358_1309594443","dateCreated":"2019-07-22T12:28:22+0000","dateStarted":"2019-07-22T19:53:44+0000","dateFinished":"2019-07-22T19:53:45+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:42399","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"flightsWithDelays: org.apache.spark.sql.DataFrame = [Year: int, Month: int ... 5 more fields]\n+----+-----+----------+-------------+---------+--------+---------+\n|Year|Month|DayofMonth|UniqueCarrier|FlightNum|DepDelay|IsDelayed|\n+----+-----+----------+-------------+---------+--------+---------+\n|2008|    1|         3|           WN|      335|       8|        0|\n|2008|    1|         3|           WN|     3231|      19|        1|\n|2008|    1|         3|           WN|      448|       8|        0|\n|2008|    1|         3|           WN|     1746|      -4|        0|\n|2008|    1|         3|           WN|     3920|      34|        1|\n+----+-----+----------+-------------+---------+--------+---------+\nonly showing top 5 rows\n\n"}]}},{"text":"%md\n\n\nNote that now we have a new table with a column that indicates whether a flight is delayed or not. This will allow us to calculate percentage of delayed flights in one pass.","user":"anonymous","dateUpdated":"2019-07-22T19:53:45+0000","config":{"tableHide":false,"editorSetting":{"editOnDblClick":true,"language":"markdown"},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"fontSize":9,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1563798502919_-1072307098","id":"20161017-205652_1397194952","dateCreated":"2019-07-22T12:28:22+0000","dateStarted":"2019-07-22T19:53:45+0000","dateFinished":"2019-07-22T19:53:45+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:42400","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>Note that now we have a new table with a column that indicates whether a flight is delayed or not. This will allow us to calculate percentage of delayed flights in one pass.</p>\n</div>"}]}},{"title":"Calculate percentage of delayed flights using flightsWithDelays DataFrame","text":"%spark\n\nflightsWithDelays.agg((sum(\"IsDelayed\") * 100 / count(\"DepDelay\")).alias(\"Percentage of Delayed Flights\")).show()","user":"anonymous","dateUpdated":"2019-07-22T19:53:45+0000","config":{"editorSetting":{"editOnDblClick":false,"language":"scala","completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","editorHide":false,"fontSize":9,"title":true,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"enabled":true},"settings":{"params":{},"forms":{}},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://zeppelin:4040/jobs/job?id=84"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1563798502919_-1305237325","id":"20161017-205750_819957102","dateCreated":"2019-07-22T12:28:22+0000","dateStarted":"2019-07-22T19:53:45+0000","dateFinished":"2019-07-22T19:53:46+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:42401","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-----------------------------+\n|Percentage of Delayed Flights|\n+-----------------------------+\n|                       19.587|\n+-----------------------------+\n\n"}]}},{"text":"%md\n\nAs you can see above, this is a very clean way of displaying a percentage of delayed flights. UDFs are useful in creating additional functions that are commonly used.\n\nNow let's explore our flights a bit more and find some averages.","user":"anonymous","dateUpdated":"2019-07-22T19:53:46+0000","config":{"editorSetting":{},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"fontSize":9,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1563798502920_-1024825967","id":"20161017-205919_1405069576","dateCreated":"2019-07-22T12:28:22+0000","dateStarted":"2019-07-22T19:53:46+0000","dateFinished":"2019-07-22T19:53:46+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:42402","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>As you can see above, this is a very clean way of displaying a percentage of delayed flights. UDFs are useful in creating additional functions that are commonly used.</p>\n<p>Now let&rsquo;s explore our flights a bit more and find some averages.</p>\n</div>"}]}},{"title":"Find Avg Taxi-in","text":"%spark\n\n(flights.select(\"Origin\", \"Dest\", \"TaxiIn\")\n        .groupBy(\"Origin\", \"Dest\")\n        .agg(avg(\"TaxiIn\")\n        .alias(\"AvgTaxiIn\"))\n        .orderBy(desc(\"AvgTaxiIn\"))\n        .show(10))","user":"anonymous","dateUpdated":"2019-07-22T19:53:46+0000","config":{"editorSetting":{"editOnDblClick":false,"language":"scala","completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala","colWidth":6,"editorHide":false,"fontSize":9,"title":true,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"enabled":true},"settings":{"params":{},"forms":{}},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://zeppelin:4040/jobs/job?id=85"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1563798502920_834833811","id":"20160410-003138_1488719873","dateCreated":"2019-07-22T12:28:22+0000","dateStarted":"2019-07-22T19:53:46+0000","dateFinished":"2019-07-22T19:53:47+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:42403","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+------+----+------------------+\n|Origin|Dest|         AvgTaxiIn|\n+------+----+------------------+\n|   CLT| IAH|              22.0|\n|   IAH| ABQ|              18.0|\n|   MCI| IAH|14.666666666666666|\n|   BHM| EWR|              13.0|\n|   SMF| GEG|12.462962962962964|\n|   MHT| CLE|              12.0|\n|   CRW| IAH|              12.0|\n|   IAH| JAX|              11.0|\n|   ONT| COS|10.903225806451612|\n|   SMF| COS|10.610169491525424|\n+------+----+------------------+\nonly showing top 10 rows\n\n"}]}},{"title":"Find Avg Taxi-out","text":"%spark\n\n(flights.select(\"Origin\", \"Dest\", \"TaxiOut\")\n        .groupBy(\"Origin\", \"Dest\")\n        .agg(avg(\"TaxiOut\")\n        .alias(\"AvgTaxiOut\"))\n        .orderBy(desc(\"AvgTaxiOut\"))\n        .show(10))","user":"anonymous","dateUpdated":"2019-07-22T19:53:47+0000","config":{"editorSetting":{"editOnDblClick":false,"language":"scala","completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala","colWidth":6,"editorHide":false,"fontSize":9,"title":true,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"enabled":true},"settings":{"params":{},"forms":{}},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://zeppelin:4040/jobs/job?id=86"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1563798502920_355385777","id":"20160410-003138_840324935","dateCreated":"2019-07-22T12:28:22+0000","dateStarted":"2019-07-22T19:53:47+0000","dateFinished":"2019-07-22T19:53:49+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:42404","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+------+----+----------+\n|Origin|Dest|AvgTaxiOut|\n+------+----+----------+\n|   LCH| IAH|      84.0|\n|   EWR| BHM|      63.0|\n|   EWR| SDF|      45.0|\n|   EWR| GSO|      36.5|\n|   MHT| CLE|      33.0|\n|   EWR| JAX|      28.0|\n|   CLE| SDF|      27.0|\n|   EWR| DTW|      27.0|\n|   ORD| EWR|      26.0|\n|   EWR| MCI|      26.0|\n+------+----+----------+\nonly showing top 10 rows\n\n"}]}},{"text":"%md\n### Part 2: Using SQL API to Analyze the Airline Data","user":"anonymous","dateUpdated":"2019-07-22T19:53:49+0000","config":{"editorSetting":{},"editorMode":"ace/mode/markdown","colWidth":12,"editorHide":true,"fontSize":9,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1563798502921_-1042693816","id":"20160410-003138_582934314","dateCreated":"2019-07-22T12:28:22+0000","dateStarted":"2019-07-22T19:53:49+0000","dateFinished":"2019-07-22T19:53:49+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:42405","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Part 2: Using SQL API to Analyze the Airline Data</h3>\n</div>"}]}},{"text":"%md\n## Part 2: Using SQL API to Analyze the Airline Data\n\nIn this section we will learn how to use Zeppelin's powerful visualization tools to get a btter understanding of our SQL results. More information back at the [Hortonworks Tutorial](https://hortonworks.com/tutorial/learning-spark-sql-with-zeppelin/#using-sql-api-to-analyze-the-airline-data)","user":"anonymous","dateUpdated":"2019-07-22T19:53:49+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1563798502921_1764554916","id":"20180807-192600_1275134162","dateCreated":"2019-07-22T12:28:22+0000","dateStarted":"2019-07-22T19:53:49+0000","dateFinished":"2019-07-22T19:53:49+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:42406","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>Part 2: Using SQL API to Analyze the Airline Data</h2>\n<p>In this section we will learn how to use Zeppelin&rsquo;s powerful visualization tools to get a btter understanding of our SQL results. More information back at the <a href=\"https://hortonworks.com/tutorial/learning-spark-sql-with-zeppelin/#using-sql-api-to-analyze-the-airline-data\">Hortonworks Tutorial</a></p>\n</div>"}]}},{"title":"Is there a more interactive way to display query results?","text":"%md\n\nAs you can see, the data displayed in Part 1 of this notebook isn't too interactive. To have a more dynamic experience, let's create a temporary (in-memory) view that we can query against and interact with the resulting data in a table or graph format. The temporary view will allow us to execute SQL queries against it.\n\nNote that the temporary view will reside in memory as long as the Spark session is alive.","user":"anonymous","dateUpdated":"2019-07-22T19:53:49+0000","config":{"editorSetting":{},"editorMode":"ace/mode/markdown","colWidth":12,"editorHide":true,"fontSize":9,"title":true,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1563798502921_-1843827982","id":"20160410-003138_556617784","dateCreated":"2019-07-22T12:28:22+0000","dateStarted":"2019-07-22T19:53:49+0000","dateFinished":"2019-07-22T19:53:49+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:42407","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>As you can see, the data displayed in Part 1 of this notebook isn&rsquo;t too interactive. To have a more dynamic experience, let&rsquo;s create a temporary (in-memory) view that we can query against and interact with the resulting data in a table or graph format. The temporary view will allow us to execute SQL queries against it.</p>\n<p>Note that the temporary view will reside in memory as long as the Spark session is alive.</p>\n</div>"}]}},{"title":"Register a Temporary View","text":"%spark\n\n// Convert flights DataFrame to a temporary view\nflights.createOrReplaceTempView(\"flightsView\")","user":"anonymous","dateUpdated":"2019-07-22T19:53:49+0000","config":{"editorSetting":{"editOnDblClick":false,"language":"scala","completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala","colWidth":12,"editorHide":false,"fontSize":9,"title":true,"results":[],"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1563798502922_-1335113368","id":"20160410-003138_636329356","dateCreated":"2019-07-22T12:28:22+0000","dateStarted":"2019-07-22T19:53:49+0000","dateFinished":"2019-07-22T19:53:50+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:42408","results":{"code":"SUCCESS","msg":[]}},{"title":"Preview Data in an interactive table format","text":"%sql\n\nSELECT * FROM flightsView LIMIT 20","user":"anonymous","dateUpdated":"2019-07-22T19:53:50+0000","config":{"editorSetting":{"editOnDblClick":false,"language":"sql","completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/sql","colWidth":12,"editorHide":false,"fontSize":9,"title":true,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[{"name":"Year","index":0,"aggr":"sum"}],"values":[{"name":"Month","index":1,"aggr":"sum"}],"groups":[],"scatter":{"xAxis":{"name":"Year","index":0,"aggr":"sum"},"yAxis":{"name":"Month","index":1,"aggr":"sum"}},"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"Year":"string","Month":"string","DayofMonth":"string","DayOfWeek":"string","DepTime":"string","CRSDepTime":"string","ArrTime":"string","CRSArrTime":"string","UniqueCarrier":"string","FlightNum":"string","TailNum":"string","ActualElapsedTime":"string","CRSElapsedTime":"string","AirTime":"string","ArrDelay":"string","DepDelay":"string","Origin":"string","Dest":"string","Distance":"string","TaxiIn":"string","TaxiOut":"string","Cancelled":"string","CancellationCode":"string","Diverted":"string","CarrierDelay":"string","WeatherDelay":"string","NASDelay":"string","SecurityDelay":"string","LateAircraftDelay":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}],"enabled":true},"settings":{"params":{},"forms":{}},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://zeppelin:4040/jobs/job?id=87"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1563798502922_1423589014","id":"20160410-003138_318924232","dateCreated":"2019-07-22T12:28:22+0000","dateStarted":"2019-07-22T19:53:50+0000","dateFinished":"2019-07-22T19:53:50+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:42409","results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"Year\tMonth\tDayofMonth\tDayOfWeek\tDepTime\tCRSDepTime\tArrTime\tCRSArrTime\tUniqueCarrier\tFlightNum\tTailNum\tActualElapsedTime\tCRSElapsedTime\tAirTime\tArrDelay\tDepDelay\tOrigin\tDest\tDistance\tTaxiIn\tTaxiOut\tCancelled\tCancellationCode\tDiverted\tCarrierDelay\tWeatherDelay\tNASDelay\tSecurityDelay\tLateAircraftDelay\n2008\t1\t3\t4\t2003\t1955\t2211\t2225\tWN\t335\tN712SW\t128\t150\t116\t-14\t8\tIAD\tTPA\t810\t4\t8\t0\tnull\t0\tNA\tNA\tNA\tNA\tNA\n2008\t1\t3\t4\t754\t735\t1002\t1000\tWN\t3231\tN772SW\t128\t145\t113\t2\t19\tIAD\tTPA\t810\t5\t10\t0\tnull\t0\tNA\tNA\tNA\tNA\tNA\n2008\t1\t3\t4\t628\t620\t804\t750\tWN\t448\tN428WN\t96\t90\t76\t14\t8\tIND\tBWI\t515\t3\t17\t0\tnull\t0\tNA\tNA\tNA\tNA\tNA\n2008\t1\t3\t4\t926\t930\t1054\t1100\tWN\t1746\tN612SW\t88\t90\t78\t-6\t-4\tIND\tBWI\t515\t3\t7\t0\tnull\t0\tNA\tNA\tNA\tNA\tNA\n2008\t1\t3\t4\t1829\t1755\t1959\t1925\tWN\t3920\tN464WN\t90\t90\t77\t34\t34\tIND\tBWI\t515\t3\t10\t0\tnull\t0\t2\t0\t0\t0\t32\n2008\t1\t3\t4\t1940\t1915\t2121\t2110\tWN\t378\tN726SW\t101\t115\t87\t11\t25\tIND\tJAX\t688\t4\t10\t0\tnull\t0\tNA\tNA\tNA\tNA\tNA\n2008\t1\t3\t4\t1937\t1830\t2037\t1940\tWN\t509\tN763SW\t240\t250\t230\t57\t67\tIND\tLAS\t1591\t3\t7\t0\tnull\t0\t10\t0\t0\t0\t47\n2008\t1\t3\t4\t1039\t1040\t1132\t1150\tWN\t535\tN428WN\t233\t250\t219\t-18\t-1\tIND\tLAS\t1591\t7\t7\t0\tnull\t0\tNA\tNA\tNA\tNA\tNA\n2008\t1\t3\t4\t617\t615\t652\t650\tWN\t11\tN689SW\t95\t95\t70\t2\t2\tIND\tMCI\t451\t6\t19\t0\tnull\t0\tNA\tNA\tNA\tNA\tNA\n2008\t1\t3\t4\t1620\t1620\t1639\t1655\tWN\t810\tN648SW\t79\t95\t70\t-16\t0\tIND\tMCI\t451\t3\t6\t0\tnull\t0\tNA\tNA\tNA\tNA\tNA\n2008\t1\t3\t4\t706\t700\t916\t915\tWN\t100\tN690SW\t130\t135\t106\t1\t6\tIND\tMCO\t828\t5\t19\t0\tnull\t0\tNA\tNA\tNA\tNA\tNA\n2008\t1\t3\t4\t1644\t1510\t1845\t1725\tWN\t1333\tN334SW\t121\t135\t107\t80\t94\tIND\tMCO\t828\t6\t8\t0\tnull\t0\t8\t0\t0\t0\t72\n2008\t1\t3\t4\t1426\t1430\t1426\t1425\tWN\t829\tN476WN\t60\t55\t39\t1\t-4\tIND\tMDW\t162\t9\t12\t0\tnull\t0\tNA\tNA\tNA\tNA\tNA\n2008\t1\t3\t4\t715\t715\t720\t710\tWN\t1016\tN765SW\t65\t55\t37\t10\t0\tIND\tMDW\t162\t7\t21\t0\tnull\t0\tNA\tNA\tNA\tNA\tNA\n2008\t1\t3\t4\t1702\t1700\t1651\t1655\tWN\t1827\tN420WN\t49\t55\t35\t-4\t2\tIND\tMDW\t162\t4\t10\t0\tnull\t0\tNA\tNA\tNA\tNA\tNA\n2008\t1\t3\t4\t1029\t1020\t1021\t1010\tWN\t2272\tN263WN\t52\t50\t37\t11\t9\tIND\tMDW\t162\t6\t9\t0\tnull\t0\tNA\tNA\tNA\tNA\tNA\n2008\t1\t3\t4\t1452\t1425\t1640\t1625\tWN\t675\tN286WN\t228\t240\t213\t15\t27\tIND\tPHX\t1489\t7\t8\t0\tnull\t0\t3\t0\t0\t0\t12\n2008\t1\t3\t4\t754\t745\t940\t955\tWN\t1144\tN778SW\t226\t250\t205\t-15\t9\tIND\tPHX\t1489\t5\t16\t0\tnull\t0\tNA\tNA\tNA\tNA\tNA\n2008\t1\t3\t4\t1323\t1255\t1526\t1510\tWN\t4\tN674AA\t123\t135\t110\t16\t28\tIND\tTPA\t838\t4\t9\t0\tnull\t0\t0\t0\t0\t0\t16\n2008\t1\t3\t4\t1416\t1325\t1512\t1435\tWN\t54\tN643SW\t56\t70\t49\t37\t51\tISP\tBWI\t220\t2\t5\t0\tnull\t0\t12\t0\t0\t0\t25\n"}]}},{"title":"Register a User Defined Function (UDF)","text":"%spark\n\n// Register a helper UDF to find delayed flights\n// Note that this is a UDF specific for use with the sparkSession\n\n// Assume:\n//  if ArrDelay is not available then Delayed = False\n//  if ArrDelay > 15 min then Delayed = True else False\n\nspark.udf.register(\"isDelayedUDF\", (time: String) => if (time == \"NA\") 0 else if (time.toInt > 15) 1 else 0)","user":"anonymous","dateUpdated":"2019-07-22T19:53:50+0000","config":{"editorSetting":{"editOnDblClick":false,"language":"scala","completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala","colWidth":12,"editorHide":false,"fontSize":9,"title":true,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1563798502922_362583533","id":"20160410-003138_40384312","dateCreated":"2019-07-22T12:28:22+0000","dateStarted":"2019-07-22T19:53:50+0000","dateFinished":"2019-07-22T19:53:51+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:42410","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res178: org.apache.spark.sql.expressions.UserDefinedFunction = UserDefinedFunction(<function1>,IntegerType,Some(List(StringType)))\n"}]}},{"title":"Compare Total Number of Delayed Flights by Carrier","text":"%sql\n--- Compare Total Number of Delayed Flights by Carrier\nSELECT UniqueCarrier, SUM(isDelayedUDF(DepDelay)) AS NumDelays FROM flightsView GROUP BY UniqueCarrier","user":"anonymous","dateUpdated":"2019-07-22T19:53:51+0000","config":{"editorSetting":{"editOnDblClick":false,"language":"sql","completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/sql","colWidth":6,"editorHide":false,"fontSize":9,"title":true,"results":[{"graph":{"mode":"pieChart","height":296,"optionOpen":false,"keys":[{"name":"UniqueCarrier","index":0,"aggr":"sum"}],"values":[{"name":"NumDelays","index":1,"aggr":"sum"}],"groups":[],"scatter":{"yAxis":{"name":"NumDelays","index":1,"aggr":"sum"}}}}],"enabled":true},"settings":{"params":{},"forms":{}},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://zeppelin:4040/jobs/job?id=88","http://zeppelin:4040/jobs/job?id=89","http://zeppelin:4040/jobs/job?id=90","http://zeppelin:4040/jobs/job?id=91","http://zeppelin:4040/jobs/job?id=92"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1563798502923_-1631987021","id":"20160410-003138_134299332","dateCreated":"2019-07-22T12:28:22+0000","dateStarted":"2019-07-22T19:53:51+0000","dateFinished":"2019-07-22T19:53:52+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:42411","results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"UniqueCarrier\tNumDelays\nXE\t1014\nWN\t18573\n"}]}},{"title":"Compare Total Delayed Time (min) by Carrier","text":"%sql\n--- Compare Total Delayed Time (min) by Carrier\nSELECT UniqueCarrier, SUM(DepDelay) AS TotalTimeDelay FROM flightsView GROUP BY UniqueCarrier","user":"anonymous","dateUpdated":"2019-07-22T19:54:01+0000","config":{"editorSetting":{"editOnDblClick":false,"language":"sql","completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/sql","colWidth":6,"editorHide":false,"fontSize":9,"title":true,"results":[{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false,"keys":[{"name":"UniqueCarrier","index":0,"aggr":"sum"}],"values":[{"name":"TotalTimeDelay","index":1,"aggr":"sum"}],"groups":[],"scatter":{"xAxis":{"name":"UniqueCarrier","index":0,"aggr":"sum"},"yAxis":{"name":"TotalTimeDelay","index":1,"aggr":"sum"}},"setting":{"multiBarChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"}},"commonSetting":{}}}],"enabled":true},"settings":{"params":{},"forms":{}},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://zeppelin:4040/jobs/job?id=93","http://zeppelin:4040/jobs/job?id=94","http://zeppelin:4040/jobs/job?id=95","http://zeppelin:4040/jobs/job?id=96","http://zeppelin:4040/jobs/job?id=97"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1563798502923_1398799282","id":"20160410-003138_163559927","dateCreated":"2019-07-22T12:28:22+0000","dateStarted":"2019-07-22T19:53:52+0000","dateFinished":"2019-07-22T19:53:53+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:42412","results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"UniqueCarrier\tTotalTimeDelay\nXE\t47505.0\nWN\t978547.0\n"}]}},{"title":"Find Average Distance Travelled by Carrier","text":"%sql\n--- Find Average Distance Travelled by Carrier\nSELECT UniqueCarrier, avg(Distance) AS AvgDistanceTraveled FROM flightsView GROUP BY UniqueCarrier ORDER BY AvgDistanceTraveled DESC","user":"anonymous","dateUpdated":"2019-07-22T19:53:53+0000","config":{"editorSetting":{"editOnDblClick":false,"language":"sql","completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/sql","colWidth":12,"editorHide":false,"fontSize":9,"title":true,"results":[{"graph":{"mode":"pieChart","height":300,"optionOpen":false,"keys":[{"name":"UniqueCarrier","index":0,"aggr":"sum"}],"values":[{"name":"AvgDistanceTraveled","index":1,"aggr":"sum"}],"groups":[],"scatter":{"xAxis":{"name":"UniqueCarrier","index":0,"aggr":"sum"},"yAxis":{"name":"AvgDistanceTraveled","index":1,"aggr":"sum"}}}}],"enabled":true},"settings":{"params":{},"forms":{}},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://zeppelin:4040/jobs/job?id=98"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1563798502923_829721842","id":"20160410-003138_172624929","dateCreated":"2019-07-22T12:28:22+0000","dateStarted":"2019-07-22T19:53:53+0000","dateFinished":"2019-07-22T19:53:54+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:42413","results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"UniqueCarrier\tAvgDistanceTraveled\nXE\t738.0677880571909\nWN\t623.7926638668864\n"}]}},{"title":"Find Out When Most Flights Get Delayed by Day of Week","text":"%sql\n\nSELECT DayOfWeek, CASE WHEN isDelayedUDF(DepDelay) = 1 THEN 'delayed' ELSE 'ok' END AS Delay, COUNT(1) AS Count\nFROM flightsView\nGROUP BY DayOfWeek, CASE WHEN isDelayedUDF(DepDelay) = 1 THEN 'delayed' ELSE 'ok' END\nORDER BY DayOfWeek","user":"anonymous","dateUpdated":"2019-07-22T19:54:01+0000","config":{"editorSetting":{"editOnDblClick":false,"language":"sql","completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/sql","colWidth":12,"editorHide":false,"fontSize":9,"title":true,"results":[{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false,"keys":[{"name":"DayOfWeek","index":0,"aggr":"sum"}],"values":[{"name":"Count","index":2,"aggr":"sum"}],"groups":[{"name":"Delay","index":1,"aggr":"sum"}],"scatter":{"xAxis":{"name":"DayOfWeek","index":0,"aggr":"sum"},"yAxis":{"name":"Delay","index":1,"aggr":"sum"}},"setting":{"multiBarChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"}},"commonSetting":{}}}],"enabled":true},"settings":{"params":{},"forms":{}},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://zeppelin:4040/jobs/job?id=99"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1563798502923_-1815003516","id":"20160410-003138_56774606","dateCreated":"2019-07-22T12:28:22+0000","dateStarted":"2019-07-22T19:53:54+0000","dateFinished":"2019-07-22T19:53:55+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:42414","results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"DayOfWeek\tDelay\tCount\n1\tdelayed\t2656\n1\tok\t11863\n2\tdelayed\t1799\n2\tok\t12911\n3\tdelayed\t1434\n3\tok\t13260\n4\tok\t12271\n4\tdelayed\t4808\n5\tok\t11003\n5\tdelayed\t3514\n6\tok\t9407\n6\tdelayed\t1878\n7\tok\t9698\n7\tdelayed\t3498\n"}]}},{"title":"Find Out When Most Flights Get Delayed by Hour","text":"%sql\n\nSELECT CAST(CRSDepTime / 100 AS INT) AS Hour, CASE WHEN isDelayedUDF(DepDelay) = 1 THEN 'delayed' ELSE 'ok' END AS Delay, COUNT(1) AS Count\nFROM flightsView\nGROUP BY CAST(CRSDepTime / 100 AS INT), CASE WHEN isDelayedUDF(DepDelay) = 1 THEN 'delayed' ELSE 'ok' END\nORDER BY Hour","user":"anonymous","dateUpdated":"2019-07-22T19:54:01+0000","config":{"editorSetting":{"editOnDblClick":false,"language":"sql","completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/sql","colWidth":12,"editorHide":false,"fontSize":9,"title":true,"results":[{"graph":{"mode":"stackedAreaChart","height":300,"optionOpen":false,"keys":[{"name":"Hour","index":0,"aggr":"sum"}],"values":[{"name":"Count","index":2,"aggr":"sum"}],"groups":[{"name":"Delay","index":1,"aggr":"sum"}],"scatter":{"xAxis":{"name":"Hour","index":0,"aggr":"sum"},"yAxis":{"name":"Delay","index":1,"aggr":"sum"}},"setting":{"stackedAreaChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"}},"commonSetting":{}}}],"enabled":true},"settings":{"params":{},"forms":{}},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://zeppelin:4040/jobs/job?id=100"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1563798502923_-1267561788","id":"20160410-003138_728063774","dateCreated":"2019-07-22T12:28:22+0000","dateStarted":"2019-07-22T19:53:55+0000","dateFinished":"2019-07-22T19:53:56+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:42415","results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"Hour\tDelay\tCount\n6\tok\t6126\n6\tdelayed\t208\n7\tok\t7274\n7\tdelayed\t372\n8\tdelayed\t547\n8\tok\t5956\n9\tok\t5861\n9\tdelayed\t761\n10\tok\t5783\n10\tdelayed\t903\n11\tdelayed\t986\n11\tok\t5115\n12\tdelayed\t1128\n12\tok\t5174\n13\tok\t5225\n13\tdelayed\t1346\n14\tdelayed\t1335\n14\tok\t4434\n15\tdelayed\t1562\n15\tok\t4818\n16\tok\t4810\n16\tdelayed\t1750\n17\tok\t4632\n17\tdelayed\t1802\n18\tdelayed\t1912\n18\tok\t4720\n19\tdelayed\t2001\n19\tok\t4461\n20\tdelayed\t1684\n20\tok\t3526\n21\tok\t2286\n21\tdelayed\t1194\n22\tdelayed\t96\n22\tok\t212\n"}]}},{"text":"%md\n## Putting it all together\n\nIn this section we will preserve our results for future use or for an application in a different usecase. More concepts and explanation of the code can be found back at the [Tutorials page.](https://hortonworks.com/tutorial/learning-spark-sql-with-zeppelin/#putting-it-all-together)","user":"anonymous","dateUpdated":"2019-07-22T19:53:56+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1563798502924_1873071829","id":"20180807-192825_2041839445","dateCreated":"2019-07-22T12:28:22+0000","dateStarted":"2019-07-22T19:53:57+0000","dateFinished":"2019-07-22T19:53:57+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:42416","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>Putting it all together</h2>\n<p>In this section we will preserve our results for future use or for an application in a different usecase. More concepts and explanation of the code can be found back at the <a href=\"https://hortonworks.com/tutorial/learning-spark-sql-with-zeppelin/#putting-it-all-together\">Tutorials page.</a></p>\n</div>"}]}},{"text":"%md\n### Persisting Results and Data","user":"anonymous","dateUpdated":"2019-07-22T19:53:57+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1563798502924_190014686","id":"20180807-193045_1241190912","dateCreated":"2019-07-22T12:28:22+0000","dateStarted":"2019-07-22T19:53:57+0000","dateFinished":"2019-07-22T19:53:57+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:42417","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Persisting Results and Data</h3>\n</div>"}]}},{"title":"Save to ORC file","text":"%spark\n\nimport org.apache.spark.sql.SaveMode\n\n// Save and Overwrite our new DataFrame to an ORC file\nflightsWithDelays.write.format(\"orc\").mode(SaveMode.Overwrite).save(\"/tmp/data/flightsWithDelays.orc\")","user":"anonymous","dateUpdated":"2019-07-22T19:53:57+0000","config":{"editorSetting":{"editOnDblClick":false,"language":"scala","completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala","colWidth":12,"editorHide":false,"fontSize":9,"title":true,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"enabled":true},"settings":{"params":{},"forms":{}},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://zeppelin:4040/jobs/job?id=101"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1563798502924_-1943259772","id":"20160410-003138_985965720","dateCreated":"2019-07-22T12:28:22+0000","dateStarted":"2019-07-22T19:53:57+0000","dateFinished":"2019-07-22T19:53:58+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:42418","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import org.apache.spark.sql.SaveMode\n"}]}},{"title":"Load back from an ORC file","text":"%spark\n\n// Load results back from ORC file\nval test = spark.read.schema(flightsWithDelays.schema).format(\"orc\").load(\"/tmp/data/flightsWithDelays.orc\")\n\n// Assert both DataFrames of the same size.\n//   Note that if assertion succeeds no warning messages will be printed\nassert (test.count == flightsWithDelays.count, println(\"Assertion Fail: Files are of different sizes.\"))\n\ntest.show(10)","user":"anonymous","dateUpdated":"2019-07-22T19:53:58+0000","config":{"editorSetting":{"editOnDblClick":false,"language":"scala","completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala","colWidth":12,"editorHide":false,"fontSize":9,"title":true,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"enabled":true},"settings":{"params":{},"forms":{}},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://zeppelin:4040/jobs/job?id=102","http://zeppelin:4040/jobs/job?id=103","http://zeppelin:4040/jobs/job?id=104"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1563798502924_-1292399486","id":"20160410-003138_1142035788","dateCreated":"2019-07-22T12:28:22+0000","dateStarted":"2019-07-22T19:53:58+0000","dateFinished":"2019-07-22T19:53:59+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:42419","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"test: org.apache.spark.sql.DataFrame = [Year: int, Month: int ... 5 more fields]\n+----+-----+----------+-------------+---------+--------+---------+\n|Year|Month|DayofMonth|UniqueCarrier|FlightNum|DepDelay|IsDelayed|\n+----+-----+----------+-------------+---------+--------+---------+\n|2008|    1|        16|           WN|     1078|       0|        0|\n|2008|    1|        16|           WN|     3600|      -5|        0|\n|2008|    1|        16|           WN|     2367|       6|        0|\n|2008|    1|        16|           WN|     3061|       8|        0|\n|2008|    1|        16|           WN|     3689|      14|        0|\n|2008|    1|        16|           WN|       26|      -4|        0|\n|2008|    1|        16|           WN|       36|       5|        0|\n|2008|    1|        16|           WN|      270|      -5|        0|\n|2008|    1|        16|           WN|      288|      -3|        0|\n|2008|    1|        16|           WN|      540|      -2|        0|\n+----+-----+----------+-------------+---------+--------+---------+\nonly showing top 10 rows\n\n"}]}},{"text":"%md\n\nWe can also create permanent tables, instead of temporary views, using `saveAsTable`. The resulting table will still exist even after your Spark program has restarted.","user":"anonymous","dateUpdated":"2019-07-22T19:53:59+0000","config":{"editorSetting":{},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"fontSize":9,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1563798502925_1744880718","id":"20161017-212315_1033823107","dateCreated":"2019-07-22T12:28:22+0000","dateStarted":"2019-07-22T19:53:59+0000","dateFinished":"2019-07-22T19:53:59+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:42420","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>We can also create permanent tables, instead of temporary views, using <code>saveAsTable</code>. The resulting table will still exist even after your Spark program has restarted.</p>\n</div>"}]}},{"title":"Save DataFrame as Permanent Table","text":"%spark\n\nflightsWithDelays.write.format(\"orc\").mode(SaveMode.Overwrite).saveAsTable(\"flightswithdelaystbl\")","user":"anonymous","dateUpdated":"2019-07-22T19:53:59+0000","config":{"editorSetting":{"editOnDblClick":false,"language":"scala","completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"title":true,"results":[],"enabled":true},"settings":{"params":{},"forms":{}},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://zeppelin:4040/jobs/job?id=105"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1563798502925_-526224915","id":"20161017-212148_1432557096","dateCreated":"2019-07-22T12:28:22+0000","dateStarted":"2019-07-22T19:53:59+0000","dateFinished":"2019-07-22T19:54:00+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:42421","results":{"code":"SUCCESS","msg":[]}},{"title":"Show Tables/Views","text":"%sql\n\nSHOW TABLES\n\n-- Note that flightsWithDelaysTbl is a permanent table instead of a temporary view!","user":"anonymous","dateUpdated":"2019-07-22T19:54:00+0000","config":{"editorSetting":{"editOnDblClick":false,"language":"sql","completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/sql","fontSize":9,"title":true,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[{"name":"tableName","index":0,"aggr":"sum"}],"values":[{"name":"isTemporary","index":1,"aggr":"sum"}],"groups":[],"scatter":{"xAxis":{"name":"tableName","index":0,"aggr":"sum"},"yAxis":{"name":"isTemporary","index":1,"aggr":"sum"}},"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"database":"string","tableName":"string","isTemporary":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}],"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1563798502925_1216988474","id":"20161017-212228_2044087527","dateCreated":"2019-07-22T12:28:22+0000","dateStarted":"2019-07-22T19:54:00+0000","dateFinished":"2019-07-22T19:54:00+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:42422","results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"database\ttableName\tisTemporary\ndefault\tflightswithdelaystbl\tfalse\n\tflightsview\ttrue\n"}]}},{"title":"Querying a Permanent Table","text":"%sql\n\nSELECT COUNT(1) AS Total from flightswithdelaystbl  -- As you can see, there's no difference in querying a temporary view vs a permanent table","user":"anonymous","dateUpdated":"2019-07-22T19:54:00+0000","config":{"editorSetting":{"editOnDblClick":false,"language":"sql","completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/sql","fontSize":9,"title":true,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[{"name":"Total","index":0,"aggr":"sum"}],"values":[],"groups":[],"scatter":{"xAxis":{"name":"Total","index":0,"aggr":"sum"}},"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"Total":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}],"enabled":true},"settings":{"params":{},"forms":{}},"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":["http://zeppelin:4040/jobs/job?id=106"],"interpreterSettingId":"spark"}},"apps":[],"jobName":"paragraph_1563798502925_566063633","id":"20161017-212847_790820933","dateCreated":"2019-07-22T12:28:22+0000","dateStarted":"2019-07-22T19:54:00+0000","dateFinished":"2019-07-22T19:54:00+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:42423","results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"Total\n0\n"}]}},{"title":"Final Words","text":"%md\n\nThis should get you started working in Scala with DataFrame, Dataset and SQL Spark APIs that are part of the Spark SQL Module. You should now have the basic tools and code samples to start working on your own data sets: from brining in/downloading datasets, to moving them from local storage to HDFS, to transforming datasets into Spark DataFrames/Datasets/temporary views, querying the data, performing basic calcuations, visualizing, and finally persisiting your results. That's a great start!","user":"anonymous","dateUpdated":"2019-07-22T19:54:01+0000","config":{"editorSetting":{},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"fontSize":9,"title":true,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1563798502926_544348647","id":"20161017-214817_1787337666","dateCreated":"2019-07-22T12:28:22+0000","dateStarted":"2019-07-22T19:54:01+0000","dateFinished":"2019-07-22T19:54:01+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:42424","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>This should get you started working in Scala with DataFrame, Dataset and SQL Spark APIs that are part of the Spark SQL Module. You should now have the basic tools and code samples to start working on your own data sets: from brining in/downloading datasets, to moving them from local storage to HDFS, to transforming datasets into Spark DataFrames/Datasets/temporary views, querying the data, performing basic calcuations, visualizing, and finally persisiting your results. That&rsquo;s a great start!</p>\n</div>"}]}},{"title":"Additional Resources","text":"%md\n\nWe hope you've enjoyed this introductory lab. Below are additional resources that you should find useful:\n\n1. [Hortonworks Apache Spark Tutorials](http://hortonworks.com/tutorials/#tuts-developers) are your natural next step where you can explore Spark in more depth.\n2. [Hortonworks Community Connection (HCC)](https://community.hortonworks.com/spaces/85/data-science.html?type=question) is a great resource for questions and answers on Spark, Data Analytics/Science, and many more Big Data topics.\n3. [Hortonworks Apache Spark Overview](https://docs.hortonworks.com/HDPDocuments/HDP3/HDP-3.0.1/spark-overview/content/analyzing_data_with_apache_spark.html).\n4. [Hortonworks Apache Zeppelin Overview](https://docs.hortonworks.com/HDPDocuments/HDP3/HDP-3.0.1/zeppelin-overview/content/overview.html)","user":"anonymous","dateUpdated":"2019-07-22T19:54:01+0000","config":{"tableHide":false,"editorSetting":{"editOnDblClick":true,"language":"markdown","completionSupport":false},"editorMode":"ace/mode/markdown","colWidth":10,"editorHide":true,"fontSize":9,"title":true,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1563798502926_-1461720043","id":"20160410-003138_2048237853","dateCreated":"2019-07-22T12:28:22+0000","dateStarted":"2019-07-22T19:54:01+0000","dateFinished":"2019-07-22T19:54:01+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:42425","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>We hope you&rsquo;ve enjoyed this introductory lab. Below are additional resources that you should find useful:</p>\n<ol>\n  <li><a href=\"http://hortonworks.com/tutorials/#tuts-developers\">Hortonworks Apache Spark Tutorials</a> are your natural next step where you can explore Spark in more depth.</li>\n  <li><a href=\"https://community.hortonworks.com/spaces/85/data-science.html?type=question\">Hortonworks Community Connection (HCC)</a> is a great resource for questions and answers on Spark, Data Analytics/Science, and many more Big Data topics.</li>\n  <li><a href=\"https://docs.hortonworks.com/HDPDocuments/HDP3/HDP-3.0.1/spark-overview/content/analyzing_data_with_apache_spark.html\">Hortonworks Apache Spark Overview</a>.</li>\n  <li><a href=\"https://docs.hortonworks.com/HDPDocuments/HDP3/HDP-3.0.1/zeppelin-overview/content/overview.html\">Hortonworks Apache Zeppelin Overview</a></li>\n</ol>\n</div>"}]}},{"text":"%md\n[![HCC Community Logo](https://hortonworks.com/wp-content/uploads/2016/03/logo-hcc.png)](https://community.hortonworks.com/)","user":"anonymous","dateUpdated":"2019-07-22T19:54:01+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":2,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1563798502926_-1774366268","id":"20180807-191637_533126565","dateCreated":"2019-07-22T12:28:22+0000","dateStarted":"2019-07-22T19:54:01+0000","dateFinished":"2019-07-22T19:54:01+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:42426","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p><a href=\"https://community.hortonworks.com/\"><img src=\"https://hortonworks.com/wp-content/uploads/2016/03/logo-hcc.png\" alt=\"HCC Community Logo\" /></a></p>\n</div>"}]}},{"text":"%md\n","user":"anonymous","dateUpdated":"2019-07-22T19:54:01+0000","config":{"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1563798502927_-1656081013","id":"20180807-191835_559447505","dateCreated":"2019-07-22T12:28:22+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:42427"}],"name":"Learning Spark SQL","id":"2EG7PN5EV","noteParams":{},"noteForms":{},"angularObjects":{"md:shared_process":[],"sh:shared_process":[],"spark:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}